{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/app.component.html","./src/app/projects/joke/components/joke-apis/joke-apis.component.html","./src/app/projects/joke/components/joke/joke.component.html","./src/app/projects/projects.component.html","./src/app/app-routing.module.ts","./src/app/app.component.scss","./src/app/app.component.ts","./src/app/app.module.ts","./src/app/core/service/shared.service.ts","./src/app/core/service/user-resolver.service.ts","./src/app/page-not-fount.component.ts","./src/app/projects/joke/components/joke-apis/joke-apis.component.ts","./src/app/projects/joke/components/joke-apis/service/joke-apis-resolver.service.ts","./src/app/projects/joke/components/joke-apis/service/joke-apis.service.ts","./src/app/projects/joke/components/joke/joke.component.ts","./src/app/projects/projects-routing.module.ts","./src/app/projects/projects.component.ts","./src/app/projects/projects.module.ts","./src/app/something-went-wrong.component.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","module.exports = \"<header>\\n  <nav class=\\\"navbar navbar-expand-sm bg-dark navbar-dark\\\">\\n    <!-- Brand/logo -->\\n    <a class=\\\"navbar-brand\\\" href=\\\"#\\\">\\n      <img src=\\\"../assets/images/logo.png\\\" alt=\\\"logo\\\" style=\\\"width:40px;border-radius:50%\\\">\\n    </a>\\n    <span class=\\\"user-name\\\" [innerHTML]=\\\"userName\\\"></span>\\n    \\n    <!-- Links -->\\n    <ul class=\\\"navbar-nav\\\">\\n      <li class=\\\"nav-item\\\">\\n        <a class=\\\"nav-link\\\" href=\\\"#\\\">Link 1</a>\\n      </li>\\n      <li class=\\\"nav-item\\\">\\n        <a class=\\\"nav-link\\\" href=\\\"#\\\">Link 2</a>\\n      </li>\\n      <li class=\\\"nav-item\\\">\\n        <a class=\\\"nav-link\\\" href=\\\"#\\\">Link 3</a>\\n      </li>\\n    </ul>\\n  </nav>\\n</header>\\n<router-outlet></router-outlet>\\n<div class=\\\"loading\\\" *ngIf=\\\"loading\\\"></div>\\n\"","module.exports = \"<div class=\\\"container-fluid mt-4\\\">\\r\\n    <h4 style=\\\"display:inline-block\\\" class=\\\"mr-5\\\">Joke APIs - <span [innerHTML]=\\\"apiTitle\\\"></span></h4>\\r\\n    <a href=\\\"https://rapidapi.com/LemmoTresto/api/joke3\\\" target=\\\"_blank\\\">Rapid Api website link</a>\\r\\n    <hr />\\r\\n    <!--- For Random Joke --->\\r\\n    <div [ngSwitch]=\\\"jokeAction\\\">\\r\\n        <div *ngSwitchCase=\\\"'randomJoke'\\\">\\r\\n            <div class=\\\"row randomJoke\\\">\\r\\n                <!-- Random Joke Section --->\\r\\n                <div class=\\\"col-md-6\\\">\\r\\n                    <div class=\\\"card text-center\\\">\\r\\n                        <div class=\\\"card-header\\\">\\r\\n                            <button style=\\\"float: left\\\" type=\\\"button\\\" class=\\\"btn btn-sm btn-secondary\\\" (click)=\\\"clearCache()\\\">Clear cache</button>\\r\\n                            <b>Joke ID - </b><span [innerHTML]=\\\"randomJoke.randomJokeId\\\"></span>\\r\\n                            <i style=\\\"float:right\\\" class=\\\"fa fa-refresh\\\" aria-hidden=\\\"true\\\"\\r\\n                                (click)=\\\"tryJokeActions('get')\\\"></i>\\r\\n                        </div>\\r\\n                        <div class=\\\"card-body\\\">\\r\\n                            <p class=\\\"card-title\\\" [innerHTML]=\\\"randomJoke.randomJokeBody\\\"></p>\\r\\n                            <div class=\\\"loading\\\" *ngIf=\\\"loading\\\"></div>\\r\\n                        </div>\\r\\n                        <div class=\\\"card-footer text-muted\\\">\\r\\n                            <div class=\\\"row\\\">\\r\\n                                <div class=\\\"col-md-6\\\">\\r\\n                                    <i class=\\\"fa fa-thumbs-up green\\\" aria-hidden=\\\"true\\\"></i>\\r\\n                                    <span [innerHTML]=\\\"randomJoke.randomJokeUpvote\\\"></span>\\r\\n                                </div>\\r\\n                                <div class=\\\"col-md-6\\\">\\r\\n                                    <i class=\\\"fa fa-thumbs-down red\\\" aria-hidden=\\\"true\\\"></i>\\r\\n                                    <span [innerHTML]=\\\"randomJoke.randomJokeDownvote\\\"></span>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </div>\\r\\n                <!--- Up vote / Down vote section -->\\r\\n                <div class=\\\"col-md-6 up-down-vote\\\">\\r\\n                    <div class=\\\"row\\\">\\r\\n                        <div class=\\\"col-md-6\\\">\\r\\n                            <div class=\\\"card text-white bg-success mb-3\\\" style=\\\"max-width: 18rem;\\\">\\r\\n                                <div class=\\\"card-body\\\"\\r\\n                                    (click)=\\\"tryJokeActions('post', randomJoke.randomJokeId, true, false)\\\">\\r\\n                                    <p class=\\\"card-text text-center\\\"><i style=\\\"font-size: 80px\\\"\\r\\n                                            class=\\\"fa fa-thumbs-o-up\\\" aria-hidden=\\\"true\\\"></i></p>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                        <div class=\\\"col-md-6\\\">\\r\\n                            <div class=\\\"card text-white bg-danger mb-3\\\" style=\\\"max-width: 18rem;\\\">\\r\\n                                <div class=\\\"card-body\\\"\\r\\n                                    (click)=\\\"tryJokeActions('post', randomJoke.randomJokeId, false, true)\\\">\\r\\n                                    <p class=\\\"card-text text-center\\\"><i style=\\\"font-size: 80px\\\"\\r\\n                                            class=\\\"fa fa-thumbs-o-down\\\" aria-hidden=\\\"true\\\"></i></p>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                    <div class=\\\"input-group mb-3\\\">\\r\\n                        <input [(ngModel)]=\\\"jokeId\\\" type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"Search by ID\\\"\\r\\n                            aria-label=\\\"Search by ID\\\" aria-describedby=\\\"basic-addon\\\">\\r\\n                        <div class=\\\"input-group-append\\\">\\r\\n                            <button class=\\\"btn btn-outline-primary\\\" type=\\\"button\\\"\\r\\n                                (click)=\\\"tryJokeActions('get', jokeId)\\\">Search</button>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n            <!-- Playing with concatMap/mergeMap/Promise-->\\r\\n            <div class=\\\"row\\\">\\r\\n                <div class=\\\"col-md-12\\\">\\r\\n                    <div class=\\\"card\\\">\\r\\n                        <div class=\\\"card-header\\\">\\r\\n                            <h5 style=\\\"margin-right: 15px\\\">Different ways of combining multiple HTTP requests</h5>\\r\\n                        </div>\\r\\n                        <div class=\\\"card-body\\\" style=\\\"height:250px;overflow: auto\\\">\\r\\n                            <div class=\\\"\\\">\\r\\n                                <b style=\\\"margin-bottom: 15px;display: inline-block;margin-right:10px\\\">1) call random\\r\\n                                    joke API -> send joke id &\\r\\n                                    call up vote API -> send same joke id & call\\r\\n                                    down vote API </b>\\r\\n                                <button type=\\\"button\\\" class=\\\"btn btn-warning btn-sm mr-1\\\"\\r\\n                                    (click)=\\\"concatMap()\\\">concatMap</button>\\r\\n                                <button type=\\\"button\\\" class=\\\"btn btn-secondary btn-sm mr-1\\\"\\r\\n                                    (click)=\\\"promise()\\\">promise</button>\\r\\n                                <button type=\\\"button\\\" class=\\\"btn btn-dark btn-sm\\\"\\r\\n                                    (click)=\\\"asyncAwait()\\\">asyncAwait</button>\\r\\n                                <div class=\\\"row\\\">\\r\\n                                    <div class=\\\"col-md-3\\\">\\r\\n                                        <div class=\\\"card\\\">\\r\\n                                            <div class=\\\"card-body\\\">\\r\\n                                                <p><b>ID:</b> {{concatMapJokeApi.id}}</p>\\r\\n                                                <p><b>Up Vote:</b> {{concatMapJokeApi.upVote}}</p>\\r\\n                                                <p><b>Down Vote:</b> {{concatMapJokeApi.downVote}}</p>\\r\\n                                            </div>\\r\\n                                        </div>\\r\\n                                    </div>\\r\\n                                    <div class=\\\"col-md-3\\\">\\r\\n                                        <div class=\\\"card\\\">\\r\\n                                            <div class=\\\"card-body\\\">\\r\\n                                                <p><b>ID:</b> {{concatMapUpVoteApi.id}}</p>\\r\\n                                                <p><b>Up Vote:</b> {{concatMapUpVoteApi.upVote}}</p>\\r\\n                                                <p><b>Down Vote:</b> {{concatMapUpVoteApi.downVote}}</p>\\r\\n                                            </div>\\r\\n                                        </div>\\r\\n                                    </div>\\r\\n                                    <div class=\\\"col-md-3\\\">\\r\\n                                        <div class=\\\"card\\\">\\r\\n                                            <div class=\\\"card-body\\\">\\r\\n                                                <p><b>ID:</b> {{concatMapDownVoteApi.id}}</p>\\r\\n                                                <p><b>Up Vote:</b> {{concatMapDownVoteApi.upVote}}</p>\\r\\n                                                <p><b>Down Vote:</b> {{concatMapDownVoteApi.downVote}}</p>\\r\\n                                            </div>\\r\\n                                        </div>\\r\\n                                    </div>\\r\\n                                    <div class=\\\"col-md-3\\\">\\r\\n                                        <div class=\\\"card\\\" [ngClass]=\\\"{'bg-success text-white' : concatMapCompleted}\\\">\\r\\n                                            <div class=\\\"card-body\\\">\\r\\n                                                Completed\\r\\n                                            </div>\\r\\n                                        </div>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                            <hr />\\r\\n                            <div class=\\\"\\\">\\r\\n                                <b style=\\\"margin-bottom: 15px;display: inline-block;margin-right:10px\\\">2) call random\\r\\n                                    joke API -> send joke id &\\r\\n                                    call Both up vote API &\\r\\n                                    down vote API asynchronously</b>\\r\\n                                <button type=\\\"button\\\" class=\\\"btn btn-primary btn-sm\\\"\\r\\n                                    (click)=\\\"forkJoin()\\\">forkJoin</button>\\r\\n                                <div class=\\\"row\\\">\\r\\n                                    <div class=\\\"col-md-3\\\">\\r\\n                                        <div class=\\\"card\\\">\\r\\n                                            <div class=\\\"card-body\\\">\\r\\n                                                <p><b>ID:</b> {{forkJoinJokeApi.id}}</p>\\r\\n                                                <p><b>Up Vote:</b> {{forkJoinJokeApi.upVote}}</p>\\r\\n                                                <p><b>Down Vote:</b> {{forkJoinJokeApi.downVote}}</p>\\r\\n                                            </div>\\r\\n                                        </div>\\r\\n                                    </div>\\r\\n                                    <div class=\\\"col-md-3\\\">\\r\\n                                        <div class=\\\"card\\\">\\r\\n                                            <div class=\\\"card-body\\\">\\r\\n                                                <p><b>ID:</b> {{forkJoinUpVoteApi.id}}</p>\\r\\n                                                <p><b>Up Vote:</b> {{forkJoinUpVoteApi.upVote}}</p>\\r\\n                                                <p><b>Down Vote:</b> {{forkJoinUpVoteApi.downVote}}</p>\\r\\n                                            </div>\\r\\n                                        </div>\\r\\n                                    </div>\\r\\n                                    <div class=\\\"col-md-3\\\">\\r\\n                                        <div class=\\\"card\\\">\\r\\n                                            <div class=\\\"card-body\\\">\\r\\n                                                <p><b>ID:</b> {{forkJoinDownVoteApi.id}}</p>\\r\\n                                                <p><b>Up Vote:</b> {{forkJoinDownVoteApi.upVote}}</p>\\r\\n                                                <p><b>Down Vote:</b> {{forkJoinDownVoteApi.downVote}}</p>\\r\\n                                            </div>\\r\\n                                        </div>\\r\\n                                    </div>\\r\\n                                    <div class=\\\"col-md-3\\\">\\r\\n                                        <div class=\\\"card\\\" [ngClass]=\\\"{'bg-success text-white' : forkJoinCompleted}\\\">\\r\\n                                            <div class=\\\"card-body\\\">\\r\\n                                                Completed\\r\\n                                            </div>\\r\\n                                        </div>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                            <hr />\\r\\n                            <div class=\\\"\\\">\\r\\n                                <b style=\\\"margin-bottom: 15px;display: inline-block;margin-right:10px\\\">3) call random\\r\\n                                    joke API -> send joke id &\\r\\n                                    call up vote API -> send same joke id & call\\r\\n                                    down vote API</b>\\r\\n                                <button type=\\\"button\\\" class=\\\"btn btn-danger btn-sm\\\"\\r\\n                                    (click)=\\\"mergeMap()\\\">mergeMap</button>\\r\\n                                <div class=\\\"row\\\">\\r\\n                                    <div class=\\\"col-md-3\\\">\\r\\n                                        <div class=\\\"card\\\">\\r\\n                                            <div class=\\\"card-body\\\">\\r\\n                                                <p><b>ID:</b> {{mergeMapJokeApi.id}}</p>\\r\\n                                                <p><b>Up Vote:</b> {{mergeMapJokeApi.upVote}}</p>\\r\\n                                                <p><b>Down Vote:</b> {{mergeMapJokeApi.downVote}}</p>\\r\\n                                            </div>\\r\\n                                        </div>\\r\\n                                    </div>\\r\\n                                    <div class=\\\"col-md-3\\\">\\r\\n                                        <div class=\\\"card\\\">\\r\\n                                            <div class=\\\"card-body\\\">\\r\\n                                                <p><b>ID:</b> {{mergeMapUpVoteApi.id}}</p>\\r\\n                                                <p><b>Up Vote:</b> {{mergeMapUpVoteApi.upVote}}</p>\\r\\n                                                <p><b>Down Vote:</b> {{mergeMapUpVoteApi.downVote}}</p>\\r\\n                                            </div>\\r\\n                                        </div>\\r\\n                                    </div>\\r\\n                                    <div class=\\\"col-md-3\\\">\\r\\n                                        <div class=\\\"card\\\">\\r\\n                                            <div class=\\\"card-body\\\">\\r\\n                                                <p><b>ID:</b> {{mergeMapDownVoteApi.id}}</p>\\r\\n                                                <p><b>Up Vote:</b> {{mergeMapDownVoteApi.upVote}}</p>\\r\\n                                                <p><b>Down Vote:</b> {{mergeMapDownVoteApi.downVote}}</p>\\r\\n                                            </div>\\r\\n                                        </div>\\r\\n                                    </div>\\r\\n                                    <div class=\\\"col-md-3\\\">\\r\\n                                        <div class=\\\"card\\\" [ngClass]=\\\"{'bg-success text-white' : mergeMapCompleted}\\\">\\r\\n                                            <div class=\\\"card-body\\\">\\r\\n                                                Completed\\r\\n                                            </div>\\r\\n                                        </div>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n\\r\\n        <!-- For Submit JOKE -->\\r\\n        <div *ngSwitchCase=\\\"'submitJoke'\\\">\\r\\n            <div class=\\\"card text-white bg-warning mb-3\\\" style=\\\"max-width:50%\\\">\\r\\n                <div class=\\\"card-header\\\">Submit a Joke</div>\\r\\n                <div class=\\\"card-body\\\">\\r\\n                    <h5 class=\\\"card-title\\\">\\r\\n                        <textarea [(ngModel)]=\\\"jokeContent\\\" class=\\\"form-control\\\" aria-label=\\\"With textarea\\\"></textarea>\\r\\n                    </h5>\\r\\n                    <button type=\\\"button\\\" class=\\\"btn btn-outline-danger\\\"\\r\\n                        (click)=\\\"submitJoke(jokeContent)\\\">Submit</button>\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n        <div *ngSwitchDefault>Default Option</div>\\r\\n    </div>\\r\\n</div>\"","module.exports = \"<div class=\\\"container-fluid mt-4\\\">\\r\\n    <h3>Joke Component API List</h3>\\r\\n    <hr />\\r\\n    <div class=\\\"card-deck\\\">\\r\\n        <div class=\\\"card border-info mb-3\\\" style=\\\"max-width: 18rem;\\\" [routerLink]=\\\"['/joke','randomJoke']\\\">\\r\\n            <div class=\\\"card-header\\\">Get A Random Joke</div>\\r\\n            <div class=\\\"card-body text-info\\\">\\r\\n                <h5 class=\\\"card-title\\\">Route Resolve test</h5>\\r\\n                <p class=\\\"card-text\\\">\\r\\n                    On click of this tile, Resolve is fired & on success, routing is activated and user is navigated to a\\r\\n                    new page containing a random joke.\\r\\n                </p>\\r\\n            </div>\\r\\n        </div>\\r\\n        <div class=\\\"card border-dark mb-3\\\" style=\\\"max-width: 18rem;\\\" [routerLink]=\\\"['/joke','submitJoke']\\\">\\r\\n            <div class=\\\"card-header\\\">Submit a Joke</div>\\r\\n            <div class=\\\"card-body text-dark\\\">\\r\\n                <h5 class=\\\"card-title\\\">POST Api test</h5>\\r\\n                <p class=\\\"card-text\\\">..........</p>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\"","module.exports = \"<div class=\\\"container-fluid mt-4\\\">\\r\\n    <h3>Projects Component</h3>\\r\\n    <hr />\\r\\n    <div>\\r\\n        <div class=\\\"card-deck\\\">\\r\\n            <div class=\\\"card\\\" style=\\\"width: 18rem;\\\">\\r\\n                <div class=\\\"card-body\\\">\\r\\n                    <h5 class=\\\"card-title\\\">Crime Data</h5>\\r\\n                    <p class=\\\"card-text\\\">Crime data is great for safe neighbourhoods.</p>\\r\\n                    <a href=\\\"#\\\" class=\\\"btn btn-primary\\\">Explore</a>\\r\\n                </div>\\r\\n            </div>\\r\\n            <div class=\\\"card\\\" style=\\\"width: 18rem;\\\">\\r\\n                <div class=\\\"card-body\\\">\\r\\n                    <h5 class=\\\"card-title\\\">Joke</h5>\\r\\n                    <p class=\\\"card-text\\\">This api allows you to submit, retrieve and vote for jokes</p>\\r\\n                    <a href=\\\"#\\\" class=\\\"btn btn-primary\\\" [routerLink]=\\\"['/joke']\\\">Explore</a>\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\"","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n// components\nimport { ProjectsComponent } from './projects/projects.component';\nimport { PageNotFoundComponent } from './page-not-fount.component';\n// modules\nimport { ProjectsRouting } from './projects/projects-routing.module';\nimport { SomethingWentWrongComponent } from './something-went-wrong.component';\n\n// routing modules\nconst routes: Routes = [\n  {\n    path: '',\n    redirectTo: '/projects',\n    pathMatch: 'full'\n  },\n  ...ProjectsRouting,\n  {\n    path: 'error',\n    component: SomethingWentWrongComponent\n  },\n  {\n    path: '**',\n    component: PageNotFoundComponent\n  }\n];\n\n@NgModule({\n  imports: [\n    RouterModule.forRoot(routes, { enableTracing: true })\n  ],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","module.exports = \"header {\\n  border-bottom: 1px solid rgba(0, 0, 0, 0.0975);\\n  height: 55px;\\n  font-size: 16px;\\n  font-family: sans-serif;\\n}\\nheader .user-name {\\n  padding-right: 10px;\\n  border-right: 1px solid #ffffff;\\n  color: #ffffff;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvRjpcXFdvcmtzcGFjZVxcUmFwaWRBcGlBbmd1bGFyOC9zcmNcXGFwcFxcYXBwLmNvbXBvbmVudC5zY3NzIiwic3JjL2FwcC9hcHAuY29tcG9uZW50LnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDSSw4Q0FBQTtFQUNBLFlBQUE7RUFDQSxlQUFBO0VBQ0EsdUJBQUE7QUNDSjtBRENJO0VBQ0ksbUJBQUE7RUFDQSwrQkFBQTtFQUNBLGNBQUE7QUNDUiIsImZpbGUiOiJzcmMvYXBwL2FwcC5jb21wb25lbnQuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbImhlYWRlciB7XHJcbiAgICBib3JkZXItYm90dG9tOiAxcHggc29saWQgcmdiYSgwLCAwLCAwLCAuMDk3NSk7XHJcbiAgICBoZWlnaHQgICAgICAgOiA1NXB4O1xyXG4gICAgZm9udC1zaXplICAgIDogMTZweDtcclxuICAgIGZvbnQtZmFtaWx5ICA6IHNhbnMtc2VyaWY7XHJcblxyXG4gICAgLnVzZXItbmFtZSB7XHJcbiAgICAgICAgcGFkZGluZy1yaWdodDogMTBweDtcclxuICAgICAgICBib3JkZXItcmlnaHQgOiAxcHggc29saWQgI2ZmZmZmZjtcclxuICAgICAgICBjb2xvciAgICAgICAgOiAjZmZmZmZmO1xyXG4gICAgfVxyXG59XHJcbiIsImhlYWRlciB7XG4gIGJvcmRlci1ib3R0b206IDFweCBzb2xpZCByZ2JhKDAsIDAsIDAsIDAuMDk3NSk7XG4gIGhlaWdodDogNTVweDtcbiAgZm9udC1zaXplOiAxNnB4O1xuICBmb250LWZhbWlseTogc2Fucy1zZXJpZjtcbn1cbmhlYWRlciAudXNlci1uYW1lIHtcbiAgcGFkZGluZy1yaWdodDogMTBweDtcbiAgYm9yZGVyLXJpZ2h0OiAxcHggc29saWQgI2ZmZmZmZjtcbiAgY29sb3I6ICNmZmZmZmY7XG59Il19 */\"","import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { SharedService } from './core/service/shared.service';\nimport { Observable, Subject, of, from } from 'rxjs';\nimport { map, tap, takeUntil } from 'rxjs/operators';\nimport {\n  Event,\n  NavigationCancel,\n  NavigationEnd,\n  NavigationError,\n  NavigationStart,\n  Router\n} from '@angular/router';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent implements OnInit, OnDestroy {\n  userName: string;\n  loading = false;\n  destroy$: Subject<boolean> = new Subject<boolean>();\n\n  constructor(private sharedService: SharedService,\n              private router: Router) {\n    this.router.events.subscribe((event: Event) => {\n      switch (true) {\n        case event instanceof NavigationStart: {\n          this.loading = true;\n          break;\n        }\n\n        case event instanceof NavigationEnd:\n        case event instanceof NavigationCancel:\n        case event instanceof NavigationError: {\n          this.loading = false;\n          break;\n        }\n        default: {\n          break;\n        }\n      }\n    });\n  }\n\n  ngOnInit() {\n    this.sharedService.getUserData()\n      .pipe(takeUntil(this.destroy$))\n      .subscribe(res => {\n        if (res) {\n          const userData = res.data;\n          this.userName = userData.first_name + ' ' + userData.last_name;\n        } else {\n          this.userName = '';\n        }\n      });\n  }\n\n  ngOnDestroy() {\n    this.destroy$.next(true);\n    this.destroy$.complete();\n  }\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { CommonModule } from '@angular/common';\nimport { HttpClientModule } from '@angular/common/http';\n\n// components\nimport { AppComponent } from './app.component';\nimport { PageNotFoundComponent } from './page-not-fount.component';\nimport { SomethingWentWrongComponent } from './something-went-wrong.component';\n\n// modules\nimport { AppRoutingModule } from './app-routing.module';\nimport { ProjectsModule } from './projects/projects.module';\n\n// 3rd pary\nimport bootstrap from 'bootstrap';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    PageNotFoundComponent,\n    SomethingWentWrongComponent\n  ],\n  imports: [\n    BrowserModule,\n    FormsModule,\n    AppRoutingModule,\n    ProjectsModule,\n    HttpClientModule,\n    CommonModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Injectable } from '@angular/core';\r\nimport { BehaviorSubject, Observable } from 'rxjs';\r\nimport { HttpClient, HttpErrorResponse } from '@angular/common/http';\r\nimport { throwError } from 'rxjs';\r\nimport { catchError } from 'rxjs/operators';\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\n\r\nexport class SharedService {\r\n    private userData: BehaviorSubject<any> = new BehaviorSubject(null);\r\n\r\n    constructor(private http: HttpClient) { }\r\n\r\n    setUserData(data) {\r\n        this.userData.next(data);\r\n    }\r\n    getUserData(): Observable<any> {\r\n        return this.userData.asObservable();\r\n    }\r\n\r\n    handleError(error: HttpErrorResponse) {\r\n        let errorMessage = 'Unknown error!';\r\n        if (error.error instanceof ErrorEvent) {\r\n            // Client-side errors\r\n            errorMessage = `Error: ${error.error.message}`;\r\n        } else {\r\n            // Server-side errors\r\n            errorMessage = `Error Code: ${error.status}\\nMessage: ${error.message}`;\r\n        }\r\n        return throwError(errorMessage);\r\n    }\r\n\r\n    userService() {\r\n        const url = 'https://reqres.in/api/users/2';\r\n        return this.http.get(url).pipe(catchError(this.handleError));\r\n    }\r\n}","import { Injectable } from '@angular/core';\r\nimport { Resolve, Router, ActivatedRouteSnapshot, RouterStateSnapshot } from '@angular/router';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Observable, of } from 'rxjs';\r\nimport { catchError, map, delay } from 'rxjs/operators';\r\nimport { SharedService } from './shared.service';\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\n\r\nexport class UserResolver implements Resolve<any> {\r\n    constructor(private http: HttpClient,\r\n        private router: Router,\r\n        private sharedService: SharedService) { }\r\n\r\n    resolve(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): Observable<any> {\r\n        return this.sharedService.userService()\r\n            .pipe(delay(500),\r\n                map(result => {\r\n                    localStorage.setItem('userInfo', JSON.stringify(result));\r\n                    return result;\r\n                }),\r\n                catchError(error => {\r\n                    localStorage.removeItem('userInfo');\r\n                    this.sharedService.setUserData(null);\r\n                    this.router.navigate(['/error']);\r\n                    const message = `Retrieval error: ${error}`;\r\n                    return of({ userDate: null, error: message });\r\n                }));\r\n    }\r\n}","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  template: `\r\n    <h1>This is not the page you were looking for!</h1>\r\n    `\r\n})\r\nexport class PageNotFoundComponent { }\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\nimport { JokeApisService } from './service/joke-apis.service';\r\nimport { JokeApisModel } from './model/joke-apis.model';\r\nimport { map, concatMap, mergeMap, delay } from 'rxjs/operators';\r\nimport { forkJoin } from 'rxjs';\r\n\r\n@Component({\r\n    selector: 'joke-apis',\r\n    templateUrl: './joke-apis.component.html',\r\n})\r\n\r\n/*\r\n    concatMap : 1) This works for pure sequential API calls. Only when first API subscription is completely\r\n                   finished, next API call get subscribed.\r\n                2) If any API fails, rest of the subsequent API calls will be suspended & error will thrown\r\n                   inside subscriber\r\n                3) If total 3 sequential API call is there & 2nd one fails, still 1st API response will be available instantly.\r\n    mergeMap :  1) This works for asynchronous API calls. Starts emitting responses whenever any\r\n                   one API call completes. If one fails, still completed one will emit response. But in below example \r\n                   mergeMap is used to do sequestial API calls. So mergeMap & cancatMap is working almost in same manner.\r\n                2) If total 3 sequential API call is there & 2nd one fails, still 1st API response will be available instantly.\r\n    forkJoin :  1) This works for asynchronous API calls. Provide response only when all API\r\n                   calls are completed.\r\n                2) If one fails, complete subscription will fail.\r\n                3) If total 3 sequential API call is there & 2nd one fails, all of them will fail.\r\n*/\r\n\r\nexport class JokeApisComponent implements OnInit {\r\n    jokeId: string;\r\n    jokeContent: string;\r\n    loading: boolean = false;\r\n    apiTitle: string = '';\r\n    jokeAction: string = '';\r\n    randomJoke: any = {};\r\n    concatMapJokeApi: any = {};\r\n    concatMapUpVoteApi: any = {};\r\n    concatMapDownVoteApi: any = {};\r\n    forkJoinJokeApi: any = {};\r\n    forkJoinUpVoteApi: any = {};\r\n    forkJoinDownVoteApi: any = {};\r\n    mergeMapJokeApi: any = {};\r\n    mergeMapUpVoteApi: any = {};\r\n    mergeMapDownVoteApi: any = {};\r\n    concatMapCompleted: boolean = false;\r\n    forkJoinCompleted: boolean = false;\r\n    mergeMapCompleted: boolean = false;\r\n\r\n    constructor(private router: Router,\r\n        private activatedRoute: ActivatedRoute,\r\n        private jokeApisService: JokeApisService) { }\r\n\r\n    ngOnInit() {\r\n        this.activatedRoute.paramMap\r\n            .subscribe(params => {\r\n                const currentUrl = params.get('id');\r\n                this.trackJokeUrl(currentUrl);\r\n            });\r\n        this.activatedRoute.data\r\n            .subscribe(data => {\r\n                this.populateJoke(data.jokeData);\r\n            });\r\n    }\r\n\r\n    clearCache() {\r\n        this.jokeApisService.clearCache();\r\n    }\r\n\r\n    trackJokeUrl(result: any) {\r\n        const url = result;\r\n\r\n        switch (url) {\r\n            case 'randomJoke':\r\n                this.jokeAction = 'randomJoke';\r\n                this.apiTitle = 'Get a random Joke';\r\n                break;\r\n\r\n            case 'submitJoke':\r\n                this.jokeAction = 'submitJoke';\r\n                this.apiTitle = 'Submit a Joke';\r\n                break;\r\n\r\n        }\r\n    }\r\n\r\n    tryJokeActions(type, id = '', upVote = false, downVote = false) {\r\n        this.loading = true;\r\n        this.jokeApisService.tryJokeActions(type, id, upVote, downVote)\r\n            .subscribe((res: JokeApisModel) => {\r\n                if (res) {\r\n                    this.populateJoke(res);\r\n                    this.loading = false;\r\n                } else {\r\n                    this.errorStatement();\r\n                }\r\n            }, error => {\r\n                this.errorStatement();\r\n            });\r\n    }\r\n\r\n    submitJoke(theJoke) {\r\n        this.jokeApisService.submitJoke(theJoke)\r\n            .subscribe(res => {\r\n                console.log(res);\r\n            }, error => {\r\n                console.log(error);\r\n            });\r\n    }\r\n\r\n    populateJoke(apiData) {\r\n        this.randomJoke.randomJokeId = apiData.id;\r\n        this.randomJoke.randomJokeBody = apiData.content;\r\n        this.randomJoke.randomJokeUpvote = apiData.upvotes;\r\n        this.randomJoke.randomJokeDownvote = apiData.downvotes;\r\n    }\r\n\r\n    errorStatement() {\r\n        this.loading = false;\r\n        this.randomJoke.randomJokeId = '000';\r\n        this.randomJoke.randomJokeBody = 'Some Error Occured !!!';\r\n        this.randomJoke.randomJokeUpvote = 0;\r\n        this.randomJoke.randomJokeDownvote = 0;\r\n    }\r\n\r\n    /* concatMap starts */\r\n\r\n    concatMap() {\r\n        this.concatMapCompleted = false;\r\n\r\n        this.jokeApisService.tryJokeActions('get') // call 1st API\r\n            .pipe(map(result => {\r\n                this.showCMJokeApiData(result);\r\n                return result;\r\n            }),\r\n                concatMap(randJoke => {\r\n                    return this.jokeApisService.tryJokeActions('post', randJoke['id'], true, false); // call 2nd API\r\n                }),\r\n                concatMap(randJoke => {\r\n                    this.showCMUpVoteApiData(randJoke);\r\n                    return this.jokeApisService.tryJokeActions('post', randJoke['id'], false, true); // call 3rd API\r\n                }),\r\n            ).subscribe(res => {\r\n                this.showCMDownVoteApiData(res);\r\n                this.concatMapCompleted = true;\r\n            }, error => {\r\n                this.concatMapCompleted = true;\r\n                console.log(error);\r\n            });\r\n    }\r\n\r\n    showCMJokeApiData(result) {\r\n        this.concatMapJokeApi.id = result.id;\r\n        this.concatMapJokeApi.upVote = result.upvotes;\r\n        this.concatMapJokeApi.downVote = result.downvotes;\r\n    }\r\n    showCMUpVoteApiData(result) {\r\n        this.concatMapUpVoteApi.id = result.id;\r\n        this.concatMapUpVoteApi.upVote = result.upvotes;\r\n        this.concatMapUpVoteApi.downVote = result.downvotes;\r\n    }\r\n    showCMDownVoteApiData(result) {\r\n        this.concatMapDownVoteApi.id = result.id;\r\n        this.concatMapDownVoteApi.upVote = result.upvotes;\r\n        this.concatMapDownVoteApi.downVote = result.downvotes;\r\n    }\r\n\r\n    /* concatMap ends */\r\n\r\n    /* Promise Starts */\r\n\r\n    promise() {\r\n        this.concatMapCompleted = false;\r\n\r\n        const promise = new Promise((resolve, reject) => {\r\n            this.jokeApisService.tryJokeActions('get') // call 1st API\r\n                .toPromise()\r\n                .then(result => {\r\n                    this.showCMJokeApiData(result);\r\n                    this.jokeApisService.tryJokeActions('post', result['id'], true, false) // call 2nd API\r\n                        .toPromise()\r\n                        .then(res => {\r\n                            this.showCMUpVoteApiData(res);\r\n                            this.jokeApisService.tryJokeActions('post', res['id'], false, true) // call 3rd API\r\n                                .toPromise()\r\n                                .then(sol => {\r\n                                    this.showCMDownVoteApiData(sol);\r\n                                    this.concatMapCompleted = true;\r\n                                    resolve();\r\n                                }, error => {\r\n                                    reject(error);\r\n                                });\r\n                        }, error => {\r\n                            reject(error);\r\n                        });\r\n                }, error => {\r\n                    reject(error);\r\n                });\r\n        });\r\n    }\r\n    /* Promise Ends */\r\n\r\n    /* asyncAwait Starts */\r\n\r\n    async asyncAwait() {\r\n        this.concatMapCompleted = false;\r\n\r\n        const randomJoke = await this.jokeApisService.tryJokeActions('get').toPromise();\r\n        this.showCMJokeApiData(randomJoke);\r\n\r\n        const upVote = await this.jokeApisService.tryJokeActions('post', randomJoke['id'], true, false).toPromise();\r\n        this.showCMUpVoteApiData(upVote);\r\n\r\n        const downVote = await this.jokeApisService.tryJokeActions('post', randomJoke['id'], false, true).toPromise();\r\n        this.showCMDownVoteApiData(downVote);\r\n\r\n        this.concatMapCompleted = true;\r\n    }\r\n    /* asyncAwait Ends */\r\n\r\n    /* forkJoin Starts */\r\n    forkJoin() {\r\n        this.forkJoinCompleted = false;\r\n\r\n        let upVote;\r\n        let downVote;\r\n        this.jokeApisService.tryJokeActions('get')\r\n            .subscribe(res => {\r\n                this.showFJJokeApiData(res);\r\n                upVote = this.jokeApisService.tryJokeActions('post', res['id'], true, false);\r\n                downVote = this.jokeApisService.tryJokeActions('post', res['id'], false, true);\r\n\r\n                forkJoin([upVote, downVote]).subscribe(combinedRes => {\r\n                    const upVoteResult = combinedRes[0];\r\n                    const downVoteResult = combinedRes[1];\r\n                    this.showFJUpVoteApiData(upVoteResult);\r\n                    this.showFJDownVoteApiData(downVoteResult);\r\n\r\n                    this.forkJoinCompleted = true;\r\n                }, error => {\r\n                    this.forkJoinCompleted = true;\r\n                    console.log(error);\r\n                });\r\n            });\r\n\r\n    }\r\n\r\n    showFJJokeApiData(result) {\r\n        this.forkJoinJokeApi.id = result.id;\r\n        this.forkJoinJokeApi.upVote = result.upvotes;\r\n        this.forkJoinJokeApi.downVote = result.downvotes;\r\n    }\r\n    showFJUpVoteApiData(result) {\r\n        this.forkJoinUpVoteApi.id = result.id;\r\n        this.forkJoinUpVoteApi.upVote = result.upvotes;\r\n        this.forkJoinUpVoteApi.downVote = result.downvotes;\r\n    }\r\n    showFJDownVoteApiData(result) {\r\n        this.forkJoinDownVoteApi.id = result.id;\r\n        this.forkJoinDownVoteApi.upVote = result.upvotes;\r\n        this.forkJoinDownVoteApi.downVote = result.downvotes;\r\n    }\r\n    /* forkJoin ends */\r\n\r\n    /* mergeMap starts */\r\n\r\n    mergeMap() {\r\n        this.mergeMapCompleted = false;\r\n\r\n        this.jokeApisService.tryJokeActions('get') // call 1st API\r\n            .pipe(map(result => {\r\n                this.showMMJokeApiData(result);\r\n                return result;\r\n            }),\r\n                mergeMap(randJoke => {\r\n                    return this.jokeApisService.tryJokeActions('post', randJoke['id'], true, false); // call 2nd API\r\n                }),\r\n                mergeMap(randJoke => {\r\n                    this.showMMUpVoteApiData(randJoke);\r\n                    return this.jokeApisService.tryJokeActions('post', randJoke['id'], false, true); // call 3rd API\r\n                }),\r\n            ).subscribe(res => {\r\n                this.showMMDownVoteApiData(res);\r\n                this.mergeMapCompleted = true;\r\n            }, error => {\r\n                this.mergeMapCompleted = true;\r\n                console.log(error);\r\n            });\r\n    }\r\n\r\n    showMMJokeApiData(result) {\r\n        this.mergeMapJokeApi.id = result.id;\r\n        this.mergeMapJokeApi.upVote = result.upvotes;\r\n        this.mergeMapJokeApi.downVote = result.downvotes;\r\n    }\r\n    showMMUpVoteApiData(result) {\r\n        this.mergeMapUpVoteApi.id = result.id;\r\n        this.mergeMapUpVoteApi.upVote = result.upvotes;\r\n        this.mergeMapUpVoteApi.downVote = result.downvotes;\r\n    }\r\n    showMMDownVoteApiData(result) {\r\n        this.mergeMapDownVoteApi.id = result.id;\r\n        this.mergeMapDownVoteApi.upVote = result.upvotes;\r\n        this.mergeMapDownVoteApi.downVote = result.downvotes;\r\n    }\r\n\r\n    /* mergeMap ends */\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { Router, Resolve, ActivatedRouteSnapshot, RouterStateSnapshot } from '@angular/router';\r\nimport { Observable, of } from 'rxjs';\r\nimport { JokeApisService } from './joke-apis.service';\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\n\r\nexport class JokeApisResolverService implements Resolve<any>{\r\n    constructor(private jokeApisService: JokeApisService,\r\n                private router: Router) { }\r\n\r\n    resolve(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): Observable<any> {\r\n        /* only if the user selects Random Joke, the api will be fired to get data before\r\n           navigating to Random Joke page with resolver service. For others the resolver simply returns\r\n           (for resolver error handling code, please refer to \"user-resolver.service.ts\")\r\n        */\r\n        const jokeId = route.params.id;\r\n        if (jokeId === 'randomJoke') {\r\n            return this.jokeApisService.randomJokeWithCaching('get');\r\n        } else {\r\n            return;\r\n        }\r\n    }\r\n\r\n}","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpErrorResponse } from '@angular/common/http';\r\nimport { throwError, Observable } from 'rxjs';\r\nimport { catchError, delay, map, publishReplay, refCount } from 'rxjs/operators';\r\nimport { HttpHeaders } from '@angular/common/http';\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\n\r\nexport class JokeApisService {\r\n    httpOptions = {\r\n        headers: new HttpHeaders({\r\n            'x-rapidapi-host': 'joke3.p.rapidapi.com',\r\n            'x-rapidapi-key': 'be2b3e0d7cmshb5ad01829f9e0aep13bff7jsn4511e33d557e'\r\n        })\r\n    };\r\n    constructor(private http: HttpClient) { }\r\n    configs: Observable<any>;\r\n    theApi: string = 'https://joke3.p.rapidapi.com/v1/joke';\r\n\r\n    handleError(error: HttpErrorResponse) {\r\n        let errorMessage = 'Unknown error!';\r\n        if (error.error instanceof ErrorEvent) {\r\n            // Client-side errors\r\n            errorMessage = `Error: ${error.error.message}`;\r\n        } else {\r\n            // Server-side errors\r\n            errorMessage = `Error Code: ${error.status}\\nMessage: ${error.message}`;\r\n        }\r\n        return throwError(errorMessage);\r\n    }\r\n\r\n    tryJokeActions(type: string, id?: string, upvote?: boolean, downvote?: boolean) {\r\n        const jokeId = id ? ('/' + id) : '';\r\n        const upVote = upvote ? '/upvote' : '';\r\n        const downVote = downvote ? '/downvote' : '';\r\n        const url = this.theApi + `${jokeId}` + upVote + downVote;\r\n\r\n        if (type === 'get') {\r\n            return this.http.get(url, this.httpOptions).pipe(delay(200), catchError(this.handleError));\r\n        } else if (type === 'post') {\r\n            return this.http.post(url, {}, this.httpOptions).pipe(catchError(this.handleError));\r\n        }\r\n    }\r\n\r\n    submitJoke(theJoke) {\r\n        const params = {\r\n            content: theJoke,\r\n            nsfw: false\r\n        };\r\n        return this.http.post(this.theApi, params, this.httpOptions).pipe(catchError(this.handleError));\r\n    }\r\n\r\n    // front end caching example\r\n    randomJokeWithCaching(type: string, id?: string, upvote?: boolean, downvote?: boolean) {\r\n        const jokeId = id ? ('/' + id) : '';\r\n        const upVote = upvote ? '/upvote' : '';\r\n        const downVote = downvote ? '/downvote' : '';\r\n        const url = this.theApi + `${jokeId}` + upVote + downVote;\r\n\r\n        if (type === 'get') {\r\n            if (!this.configs) {\r\n                this.configs = this.http.get(url, this.httpOptions)\r\n                    .pipe(publishReplay(1), // this tells Rx to cache the latest emitted\r\n                        refCount(), // and this tells Rx to keep the Observable alive as long as there are any Subscribers\r\n                        catchError(this.handleError));\r\n            }\r\n            return this.configs;\r\n        }\r\n    }\r\n\r\n    // Clear configs\r\n    clearCache() {\r\n        this.configs = null;\r\n        alert('Cache removed !!!');\r\n    }\r\n}\r\n","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n    selector: 'joke',\r\n    templateUrl: './joke.component.html'\r\n})\r\n\r\nexport class JokeComponent {\r\n    \r\n}","import { ProjectsComponent } from './projects.component';\r\nimport { JokeComponent } from './joke/components/joke/joke.component';\r\nimport { JokeApisComponent } from './joke/components/joke-apis/joke-apis.component';\r\n// services\r\nimport { UserResolver } from '../core/service/user-resolver.service';\r\nimport { JokeApisResolverService } from './joke/components/joke-apis/service/joke-apis-resolver.service';\r\n\r\n\r\n\r\nexport const ProjectsRouting = [\r\n    { path: 'projects', component: ProjectsComponent, resolve: { userDate: UserResolver } },\r\n    {\r\n        path: 'joke',\r\n        children: [\r\n            { path: '', component: JokeComponent },\r\n            { path: ':id', component: JokeApisComponent, resolve: { jokeData: JokeApisResolverService} }\r\n        ]\r\n    }\r\n]","import { Component, OnInit } from '@angular/core';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { SharedService } from '../core/service/shared.service';\r\n\r\n@Component({\r\n    selector: 'projects',\r\n    templateUrl: './projects.component.html'\r\n})\r\n\r\nexport class ProjectsComponent implements OnInit {\r\n    constructor(private activatedRoute: ActivatedRoute, private sharedService: SharedService) { }\r\n\r\n    ngOnInit() {\r\n        this.activatedRoute.data\r\n            .subscribe(data => {\r\n                this.sharedService.setUserData(data.userDate);\r\n            });\r\n    }\r\n}","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { RouterModule  } from '@angular/router';\r\nimport { ProjectsComponent } from './projects.component';\r\nimport { JokeComponent } from './joke/components/joke/joke.component';\r\nimport { JokeApisComponent } from './joke/components/joke-apis/joke-apis.component';\r\n\r\n\r\n\r\n@NgModule({\r\n    declarations: [\r\n        ProjectsComponent,\r\n        JokeComponent,\r\n        JokeApisComponent\r\n    ],\r\n    imports: [\r\n        RouterModule,\r\n        CommonModule,\r\n        FormsModule\r\n    ],\r\n    exports: [\r\n        ProjectsComponent,\r\n        JokeComponent,\r\n        JokeApisComponent\r\n    ]\r\n})\r\n\r\nexport class ProjectsModule { }","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n    template: `<h2>Something Went Wrong !!!</h2>`\r\n})\r\n\r\nexport class SomethingWentWrongComponent{\r\n    \r\n}","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}